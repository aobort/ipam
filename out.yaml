apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: ipam-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: examples.ipam.onmetal.de
spec:
  group: ipam.onmetal.de
  names:
    kind: Example
    listKind: ExampleList
    plural: examples
    singular: example
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Example is the Schema for the examples API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ExampleSpec defines the desired state of Example
            properties:
              foo:
                description: Foo is an example field of Example. Edit example_types.go to remove/update
                type: string
            type: object
          status:
            description: ExampleStatus defines the observed state of Example
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: ipam-system/ipam-serving-cert
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: ipams.ipam.onmetal.de
spec:
  group: ipam.onmetal.de
  names:
    kind: Ipam
    listKind: IpamList
    plural: ipams
    singular: ipam
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Ipam is the Schema for the ipams API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IpamSpec defines the desired state of Ipam
            properties:
              crd:
                description: CRD find IP for
                properties:
                  groupVersion:
                    description: Kind is CRD Kind for lookup
                    type: string
                  kind:
                    description: Kind is CRD Kind for lookup
                    type: string
                  name:
                    description: Name is CRD Name for lookup
                    type: string
                type: object
              ip:
                description: IP to request, if not specified - will be added automatically
                type: string
              subnet:
                description: Subnet to get IP from
                type: string
            type: object
          status:
            description: IpamStatus defines the observed state of Ipam
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: ipam-system/ipam-serving-cert
  creationTimestamp: null
  name: ipam-mutating-webhook-configuration
  namespace: ipam-system
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: ipam-webhook-service
      namespace: ipam-system
      path: /mutate-ipam-onmetal-de-v1alpha1-ipam
  failurePolicy: Fail
  name: mipam.kb.io
  rules:
  - apiGroups:
    - ipam.onmetal.de
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ipams
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: ipam-system/ipam-serving-cert
  creationTimestamp: null
  name: ipam-validating-webhook-configuration
  namespace: ipam-system
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: ipam-webhook-service
      namespace: ipam-system
      path: /validate-ipam-onmetal-de-v1alpha1-ipam
  failurePolicy: Fail
  name: vipam.kb.io
  rules:
  - apiGroups:
    - ipam.onmetal.de
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ipams
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: ipam-webhook-service
      namespace: ipam-system
      path: /validate-ipam-onmetal-de-v1alpha1-subnet
  failurePolicy: Fail
  name: vsubnet.kb.io
  rules:
  - apiGroups:
    - ipam.onmetal.de
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - subnets
  sideEffects: None
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ipam-controller-manager
  namespace: ipam-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ipam-leader-election-role
  namespace: ipam-system
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: ipam-manager-role
rules:
- apiGroups:
  - ipam.onmetal.de
  resources:
  - networkglobals
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ipam.onmetal.de
  resources:
  - networkglobals/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ipam.onmetal.de
  resources:
  - subnets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ipam.onmetal.de
  resources:
  - subnets/finalizers
  verbs:
  - update
- apiGroups:
  - ipam.onmetal.de
  resources:
  - subnets/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ipam-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ipam-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ipam-leader-election-rolebinding
  namespace: ipam-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ipam-leader-election-role
subjects:
- kind: ServiceAccount
  name: ipam-controller-manager
  namespace: ipam-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ipam-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ipam-manager-role
subjects:
- kind: ServiceAccount
  name: ipam-controller-manager
  namespace: ipam-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ipam-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ipam-proxy-role
subjects:
- kind: ServiceAccount
  name: ipam-controller-manager
  namespace: ipam-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: f42c18d5.onmetal.de
kind: ConfigMap
metadata:
  name: ipam-manager-config
  namespace: ipam-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: ipam-controller-manager-metrics-service
  namespace: ipam-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: ipam-webhook-service
  namespace: ipam-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: ipam-controller-manager
  namespace: ipam-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: localhost:5000/ipam:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: ipam-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ipam-serving-cert
  namespace: ipam-system
spec:
  dnsNames:
  - ipam-webhook-service.ipam-system.svc
  - ipam-webhook-service.ipam-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: ipam-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: ipam-selfsigned-issuer
  namespace: ipam-system
spec:
  selfSigned: {}
